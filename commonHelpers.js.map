{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\nlet userSelectedDate = 0;\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', onTimerStart);\n\nflatpickr('input[type=text]', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const currentDate = new Date();\n    if (selectedDates[0] - currentDate > 0) {\n      startBtn.disabled = false;\n    } else {\n        startBtn.disabled = true;\n        iziToast.show({\n          title: 'Hey',\n          message: 'What would you like to add?',\n        });\n    //   alert('Please choose a date in the future');\n    }\n    userSelectedDate = selectedDates[0];\n  },\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction updateTimerFields({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction onTimerStart() {\n  const selectedDate = userSelectedDate;\n  const timerId = setInterval(() => {\n    const startDate = new Date();\n    const countDown = selectedDate - startDate;\n    startBtn.disabled = true;\n\n    if (countDown < 0) {\n      clearInterval(timerId);\n      return;\n    }\n    updateTimerFields(convertMs(countDown));\n  }, 1000);\n}\n"],"names":["startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","onTimerStart","selectedDates","currentDate","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerFields","selectedDate","timerId","startDate","countDown"],"mappings":"oDACc,SAAS,cAAc,kBAAkB,EACvD,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3D,IAAIC,EAAmB,EAEvBL,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASM,CAAY,EAE/C,UAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAc,IAAI,KACpBD,EAAc,GAAKC,EAAc,EACnCR,EAAS,SAAW,IAElBA,EAAS,SAAW,GACpB,SAAS,KAAK,CACZ,MAAO,MACP,QAAS,6BACnB,CAAS,GAGLK,EAAmBE,EAAc,EAClC,CACH,CAAC,EAED,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASC,EAAkB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC5Db,EAAS,YAAcc,EAAeJ,CAAI,EAC1CT,EAAU,YAAca,EAAeH,CAAK,EAC5CT,EAAY,YAAcY,EAAeF,CAAO,EAChDT,EAAY,YAAcW,EAAeD,CAAO,CAClD,CAEA,SAASR,GAAe,CACtB,MAAMY,EAAeb,EACfc,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAY,IAAI,KAChBC,EAAYH,EAAeE,EAGjC,GAFApB,EAAS,SAAW,GAEhBqB,EAAY,EAAG,CACjB,cAAcF,CAAO,EACrB,MACD,CACDF,EAAkBR,EAAUY,CAAS,CAAC,CACvC,EAAE,GAAI,CACT"}